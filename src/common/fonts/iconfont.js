;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-less" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M509.927514 387.159081C517.168621 379.168894 527.507586 379.262447 534.709532 387.493244L805.278364 696.714765C813.036915 705.581679 826.514517 706.480186 835.381431 698.721636 844.248346 690.963085 845.146852 677.485483 837.388303 668.618569L566.819471 359.397045C542.819471 331.968474 502.692194 331.60538 478.31207 358.507586L197.525612 668.340919C189.61372 677.071283 190.277222 690.562496 199.007586 698.474389 207.737949 706.386281 221.229163 705.722778 229.141056 696.992414L509.927514 387.159081Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-moreunfold" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M478.31207 644.159081C502.692194 671.061286 542.819471 670.698193 566.819471 643.269621L837.388303 334.048098C845.146852 325.181184 844.248346 311.703582 835.381431 303.94503 826.514517 296.186481 813.036915 297.084988 805.278364 305.951902L534.709532 615.173423C527.507586 623.40422 517.168621 623.497773 509.927514 615.507586L229.141056 305.674253C221.229163 296.943889 207.737949 296.280386 199.007586 304.192277 190.277222 312.104171 189.61372 325.595383 197.525612 334.325747L478.31207 644.159081Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-viewgallery" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M147.04975 49.951219 348.539994 49.951219C390.229001 49.951219 423.931625 83.45593 423.931625 125.058766L423.931625 349.47782C423.931625 390.977141 390.167209 424.585365 348.539994 424.585365L147.04975 424.585365C105.360742 424.585365 71.65812 391.080655 71.65812 349.47782L71.65812 125.058766C71.65812 83.559445 105.422534 49.951219 147.04975 49.951219ZM21.333333 349.47782C21.333333 418.650511 77.549527 474.536585 147.04975 474.536585L348.539994 474.536585C417.992574 474.536585 474.25641 418.533018 474.25641 349.47782L474.25641 125.058766C474.25641 55.886075 418.040215 0 348.539994 0L147.04975 0C77.597169 0 21.333333 56.003567 21.333333 125.058766L21.333333 349.47782Z"  ></path>' +
    '' +
    '<path d="M675.460006 49.951219 876.950251 49.951219C918.639258 49.951219 952.341879 83.45593 952.341879 125.058766L952.341879 349.47782C952.341879 390.977141 918.577466 424.585365 876.950251 424.585365L675.460006 424.585365C633.770999 424.585365 600.068375 391.080655 600.068375 349.47782L600.068375 125.058766C600.068375 83.559445 633.832791 49.951219 675.460006 49.951219ZM549.74359 349.47782C549.74359 418.650511 605.959785 474.536585 675.460006 474.536585L876.950251 474.536585C946.402831 474.536585 1002.666667 418.533018 1002.666667 349.47782L1002.666667 125.058766C1002.666667 55.886075 946.450473 0 876.950251 0L675.460006 0C606.007426 0 549.74359 56.003567 549.74359 125.058766L549.74359 349.47782Z"  ></path>' +
    '' +
    '<path d="M147.04975 599.414635 348.539994 599.414635C390.229001 599.414635 423.931625 632.919345 423.931625 674.52218L423.931625 898.941233C423.931625 940.440555 390.167209 974.048781 348.539994 974.048781L147.04975 974.048781C105.360742 974.048781 71.65812 940.54407 71.65812 898.941233L71.65812 674.52218C71.65812 633.022859 105.422534 599.414635 147.04975 599.414635ZM21.333333 898.941233C21.333333 968.113924 77.549527 1024 147.04975 1024L348.539994 1024C417.992574 1024 474.25641 967.996433 474.25641 898.941233L474.25641 674.52218C474.25641 605.349489 418.040215 549.463415 348.539994 549.463415L147.04975 549.463415C77.597169 549.463415 21.333333 605.466982 21.333333 674.52218L21.333333 898.941233Z"  ></path>' +
    '' +
    '<path d="M874.686701 974.048781 868.289711 974.048781 845.457374 974.048781 776.173041 974.048781 675.395834 974.048781C633.745909 974.048781 600.068375 940.547631 600.068375 898.941233L600.068375 674.52218C600.068375 633.022859 633.832791 599.414635 675.460006 599.414635L876.950251 599.414635C918.642281 599.414635 952.341879 632.88393 952.341879 674.420529L952.341879 869.021858 952.341879 899.065886C952.341879 912.859535 963.607467 924.041495 977.504273 924.041495 991.401079 924.041495 1002.666667 912.859535 1002.666667 899.065886L1002.666667 869.021858 1002.666667 674.420529C1002.666667 605.303266 946.442579 549.463415 876.950251 549.463415L675.460006 549.463415C606.007426 549.463415 549.74359 605.466982 549.74359 674.52218L549.74359 898.941233C549.74359 968.110364 605.927488 1024 675.395834 1024L776.173041 1024 845.457374 1024 868.289711 1024 874.686701 1024 876.37206 1024C890.847055 1024 902.112642 1012.818039 902.112642 999.02439 902.112642 985.230741 890.847055 974.048781 876.950251 974.048781L874.686701 974.048781Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-similarproduct" viewBox="0 0 1025 1024">' +
    '' +
    '<path d="M302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM458.999525 1020.8768c5.888 1.792 12.544 1.28 18.688-2.304C472.055525 1021.6448 465.399525 1022.6688 458.999525 1020.8768zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808zM302.327525 504.7808l-146.944-88.064c-11.776-7.168-27.136-3.328-34.048 8.448-7.168 11.776-3.328 27.136 8.448 34.304l146.944 88.064c11.776 7.168 27.136 3.328 34.048-8.704C317.943525 527.0272 314.103525 511.6672 302.327525 504.7808z"  ></path>' +
    '' +
    '<path d="M477.687525 1018.5472c-6.144 3.584-12.8 4.096-18.688 2.304C465.399525 1022.6688 472.055525 1021.6448 477.687525 1018.5472z"  ></path>' +
    '' +
    '<path d="M490.641125 954.112 490.641125 511.744l389.632-221.184 39.8848-24.1664c7.9872-5.1968 9.4976-11.8016 10.5472-16.5376 1.024-9.728-3.584-19.968-13.568-25.088l-440.32-220.16c-7.168-3.584-15.36-3.584-22.528 0l-440.32 220.16C-2.414875 235.52 0.145125 259.328 0.145125 261.888l0 469.76c0 8.704 4.608 16.896 12.032 21.504 0 0 430.848 260.352 438.272 263.68 15.104 7.424 24.576 5.376 31.744 1.792l143.36-82.944c12.288-7.168 16.384-22.784 9.216-35.072-6.912-12.288-22.784-16.384-34.816-9.472l-99.072 57.6 0-0.256L490.641125 954.112M440.465125 511.744l0 441.088L50.065125 717.568l0-427.52L440.465125 511.744zM465.553125 468.224 78.225125 248.576l387.328-193.536 387.328 193.536L465.553125 468.224z"  ></path>' +
    '' +
    '<path d="M812.945125 917.376l201.984-121.344c5.632-3.584 9.216-9.728 9.216-16.64l0-222.464c0-7.8336-5.888-13.312-12.288-16.384l-5.12-2.56c-0.512-0.256-1.28-0.256-1.792-0.256l1.536 0-196.352-98.048c-5.376-2.56-11.776-2.56-17.152 0l-196.096 98.048c-14.336 5.504-17.92 17.792-17.92 24.704l0 216.96c0 6.912 3.584 13.056 9.472 16.64 0 0 200.1664 120.0896 201.1904 120.3456C789.623525 916.4032 801.553125 925.2352 812.945125 917.376zM782.481125 868.224l-165.12-99.584 0-178.944 165.12 93.44L782.481125 868.224zM801.681125 650.112l-161.024-91.392 161.024-80.384 160.768 80.384L801.681125 650.112zM985.745125 768.64l-164.864 99.328 0-184.832 164.864-93.44L985.745125 768.64z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)